@model ControldeCambios.Models.UsuariosModelo
@{
    ViewBag.Title = "detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    function esconderEditable() {
        $('.editable').hide();
        $('.noEditable').show();
    }
    function esconderNoEditable() {
        $('.noEditable').hide();
        $('.editable').show();
    }
</script>

<h2>Detalles</h2>
<hr />
@if (Model.modificarUsuario)
{
<button type="button" class="btn btn-primary" onClick="esconderNoEditable()">Modificar</button>
<button type="button" class="btn btn-default" onClick="esconderEditable()">Ver Detalles</button>
}
@if (Model.eliminarUsuario)
{
<button type="button" class="btn btn-danger" data-toggle="modal" data-target="#confirmModal">Eliminar</button>
}

<div class="noEditable" style="margin-top:15px">
    <div class="row">
        <label class="col-md-2">Nombre:</label>
        <span class="col-md-10">
            @Html.DisplayFor(modelItem =>
    Model.usuario.nombre)
        </span>
    </div>
    <div class="row">
        <label class="col-md-2">Cédula:</label>
        <span class="col-md-10">
            @Html.DisplayFor(modelItem =>
    Model.usuario.cedula)
        </span>
    </div>
    <div class="row">
        <label class="col-md-2">Rol:</label>
        <span class="col-md-10">
            @Html.DisplayFor(modelItem =>
    Model.rol.Name)
        </span>
    </div>
    <div class="row">
        <label class="col-md-2">Correo:</label>
        <span class="col-md-10">
            @Html.DisplayFor(modelItem =>
    Model.identityUsuario.Email)
        </span>
    </div>
    <div class="row">
        <label class="col-md-2">Teléfonos:</label>
        <span class="col-md-10">
            @for (int j = 0; j < Model.telefonos.Count; j++)
            {
                @Html.DisplayFor(modelItem =>
    Model.telefonos.ElementAt(j).telefono)
                @Html.Raw("<br>")
            }
        </span>
    </div>
</div>
@using (Html.BeginForm())
{
    if (Model.modificarUsuario)
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal editable" style="display:none;margin-top:15px">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2 required">Nombre:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombreUsuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombreUsuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2 required">Cédula:</label>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.usuario.cedula, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.usuario.cedula)
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2 required">Rol:</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.rol.Name, (SelectList)ViewBag.Name, new { @class = "col-xs-12", @style = "height:30px;border-radius:4px" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2 required">Correo:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2 required">Telefono 1:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tel1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tel1, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2">Telefono 2:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tel2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tel2, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2">Telefono 3:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tel3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tel3, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(m => m.identityUsuario.Id)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Aceptar" class="btn btn-success" />
                    <button type="button" class="btn btn-default" onclick="location.reload()">Cancelar</button>
                </div>
            </div>
        </div>
}
}

<div>
    @Html.ActionLink("Volver a la lista de Usuarios", "Index")
</div>
@if (Model.eliminarUsuario)
{
<!-- Modal -->
<div class="modal fade" id="confirmModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#d61d1d;color:#FFFFFF">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Eliminar Usuario</h4>
            </div>
            <div class="modal-body" style="padding-bottom:0px">
                <p>Seguro que deseas eliminar a @(Model.nombreUsuario)?</p>
                <p style="color:red"><sub>*Esta acción es irreversible</sub></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    @using (Html.BeginForm("Borrar", "Usuarios", FormMethod.Post, new { @class = "form-horizontal", role = "form", style = "display:inline;padding-left:5px;" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.identityUsuario.Id)
                        @Html.HiddenFor(m => m.usuario.cedula)
                        <button type="submit" class="btn btn-danger">Eliminar</button>
                    }
            </div>
        </div>
    </div>
</div>
}

<style type="text/css">
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
