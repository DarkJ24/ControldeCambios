@model ControldeCambios.Models.RequerimientosIndexModel
@using Chart.Mvc.ComplexChart;
@using Chart.Mvc.Extensions;
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/Chart.js"></script>

<h1>Gestión de proyecto</h1>

<h1>
    @Html.DisplayFor(m => m.titulo)
</h1>

<div id="row">
    <b> Sprint </b>
    @foreach (var spr in Model.sprints)
    {
        if (spr == Model.sprint)
        {
            @Html.Label(spr.ToString());
        }
        else
        {
            @Html.ActionLink(spr.ToString(), "Index", new { proyecto = Model.id, sprint = spr }, null)
        }

        @Html.Raw("  ")
    }
</div>

<center>
    @Html.DisplayFor(m => m.descripcion)
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(m => m.lider)
            @Html.DisplayFor(m => m.lider)
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.cliente)
            @Html.DisplayFor(m => m.cliente)
        </div>
    </div>
</center>

<h3>Gráfico de Quema</h3>

@{
    var lineChart = new LineChart();
    lineChart.ComplexData.Labels.AddRange(ViewBag.dias);
    lineChart.ComplexData.Datasets.AddRange(new List<ComplexDataset>
                           {
                              new ComplexDataset
                                  {
                                      Data = ViewBag.esfuerzo_real,
                                      Label = "My First dataset",
                                      FillColor = "rgba(220,220,220,0.2)",
                                      StrokeColor = "rgba(220,220,220,1)",
                                      PointColor = "rgba(220,220,220,1)",
                                      PointStrokeColor = "#fff",
                                      PointHighlightFill = "#fff",
                                      PointHighlightStroke = "rgba(220,220,220,1)",
                                  },
                              new ComplexDataset
                                  {
                                      Data = ViewBag.esfuerzo_ideal,
                                      Label = "My Second dataset",
                                      FillColor = "rgba(151,187,205,0.2)",
                                      StrokeColor = "rgba(151,187,205,1)",
                                      PointColor = "rgba(151,187,205,1)",
                                      PointStrokeColor = "#fff",
                                      PointHighlightFill = "#fff",
                                      PointHighlightStroke = "rgba(151,187,205,1)",
                                  }
                          });
}

<center>
    <canvas id="myCanvas" width="800" height="400"></canvas>
    @Html.CreateChart("myCanvas", lineChart)
</center>

<h3>Product Backlog</h3>

<table class="table">
    <tr>
        <th>
            Titulo
        </th>
        <th>
            Reponsable
        </th>
        <th>
            Valor
        </th>
        <th>
            Completado
        </th>
        <th>
            Consultar
        </th>
    </tr>
    @foreach (var req in Model.reqs)
    {
        <tr id="@(req.codigo)">
            <td>
                @Html.DisplayFor(modelItem =>
req.nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem =>
req.creadoPor)
            </td>
            <td>
                @Html.DisplayFor(modelItem =>
req.esfuerzo)
            </td>
            <td>
                @Html.DisplayFor(modelItem =>
req.estado)
            </td>
                <td>

                    @Html.ActionLink("Consultar", "Detalles", new
           {
               id = req.codigo
           })
                </td>
        </tr>
    }
</table>

@Html.PagedListPager((IPagedList)ViewBag.OnePageOfReqs, page => Url.Action("Index", new { page }))
@Html.Raw("Página:")
@if (ViewBag.OnePageOfReqs.PageCount < ViewBag.OnePageOfReqs.PageNumber)
{
    @Html.Raw("0")
}
else
{
    @ViewBag.OnePageOfReqs.PageNumber
}
@Html.Raw(" de ")
@ViewBag.OnePageOfReqs.PageCount
